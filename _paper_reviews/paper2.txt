==A omprehensive Comparative Analysis of NoSQL Technologies==

* Solr/Elastic Search
* MongoDB
* Redis

Cassandra was modelled upon DynamoDB - they are mostly the same. DynamoDB and Cassandra both belong to key-value stores, a category of NoSQL databases. They are both (A,P) databases in CAP theory parlance - both of them have only eventual (or weak) consistency, as they sacrifies C to achieve higher A (availability). They both use the Gossip protocol for membership protocol and failure detection. They both use consistent hashing ring of nodes, which has some nuances of optimisation. NoSQL does not mean the absence of a SQL query language, it is actually the abbreviation of NoSQL. For ease of basic CRUD (create, read, update, and write) operations, the developers of both DynamoDB and Cassandra developped some variants of SQL lanuages.
CQL for Cassandra Vs. PartialQL for DynamoDB
As the name of PartialQL implies, it is 'partial' SQL, many feature from a 'full-fledged' SQL language is absent. Both does not support relational joins, because the databases are not relational databases; they are key-value stores after all.

Cassandra has write optimisation, DynamoDB is more suitable for large reads.


DynamoDB
In Amazon DynamoDB, you can use either the DynamoDB API, or PartiQL, a SQL-compatible query language, to query an item from a table.

PartiQL for DynamoDB
With PartiQL, you can perform a query by using the ExecuteStatement action and the Select statement on the partition key.

SELECT AlbumTitle, Year, Price
FROM Music
WHERE Artist='No One You Know' 
Using the SELECT statement in this way returns all the songs associated with this particular Artist.

For code examples using Select and ExecuteStatement, see PartiQL Select Statements for DynamoDB.